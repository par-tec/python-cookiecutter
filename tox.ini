[tox]
envlist =
    py3
    safety

skipsdist = True

[testenv]
description = run unit tests
usedevelop = True
deps =
    pytest>=7
    pytest-sugar

# Uncomment here to set an extra PIP_INDEX_URL
# setenv =
#    PIP_EXTRA_INDEX_URL = https://mypypiserver.org

setenv =
  PYTHONPATH=:.:

# To show pytest logs in console, use
#   tox -- --log-cli-level=DEBUG
commands =
    pytest {posargs}

# Because safety need to work on requirements.txt, and tox doesn't permit to 
# redirect output, we need to create a temporary file reporting all dependencies
[testenv:safety]
deps = safety

allowlist_externals =
    poetry
    safety
    bash

setenv =
  PYTHONPATH=:.:

commands =
    poetry export -f requirements.txt -o requirements.txt
    safety check --short-report -r requirements.txt
    bash -c "rm requirements.txt"

[testenv:release]
# Release with tox via:
#
#    tox -e release -- $PARAMETERS
#
# passing the repo references you would set via
# twine, eg:
#  --repository-url https://test.pypi.org/legacy/
#
# To pass
deps =
  wheel
  twine

# Limit TWINE_* to this section.
passenv =
  TWINE_USERNAME
  TWINE_PASSWORD
  TWINE_REPOSITORY_URL

commands =
#  rm dist -rf
  poetry build -f wheel # or sdist
  twine upload {posargs} dist/*


# Uncomment the following section if you want to
#  test the installation on the test pypi
# [testenv:test-release]
#commands =
#  pip install --index-url=https://test.pypi.org/simple

#
# Tools configuration.
#
[flake8]
# Ignore long lines in flake8 because
#   they are managed by black and we
#   want to support links.
max-line-length = 150
# Disable E203 because black correctly handles whitespaces before ':'.
extend-ignore = E203
